worker_processes  4;
error_log  /usr/local/nginx/logs/error.log;
pid        /usr/local/nginx/logs/nginx.pid;
worker_rlimit_nofile 65535;

events {
    use epoll;
    worker_connections  65535;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    server_tokens off;
    tcp_nopush on;
    tcp_nodelay on;
    client_body_timeout   10;
    client_header_timeout  30;
    keepalive_timeout     30  30;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    sendfile on;
    send_timeout 10;
    client_body_buffer_size  64K;
    client_header_buffer_size  128k;
    client_max_body_size  10m;
    large_client_header_buffers  4  128k;

  # gzip压缩功能设置
    gzip on;
    gzip_min_length 1k;
    gzip_buffers    4 16k;
    gzip_http_version 1.0;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/javascript application/json application/javascript application/x-javascript application/xml;
    gzip_vary on;

    #设置单个IP在每秒请求数不能超过20次
    limit_req_zone $binary_remote_addr zone=one:20m rate=20r/s;

    #设置单个IP同时连接数
    limit_conn_zone $binary_remote_addr zone=addr:20m;

    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

  # 设定负载均衡方式：RR模式
    upstream  xws  {
        server 192.168.1.188:6080 weight=1 max_fails=5 fail_timeout=10s ;
        server 192.168.1.188:7080 weight=1 max_fails=5 fail_timeout=10s ;
        check interval=3000 rise=2 fall=5 timeout=1000 type=http;
    }

    proxy_cache_key '$host:$server_port$request_uri';
    proxy_temp_file_write_size 64k;
    proxy_temp_path /usr/local/nginx/temp/;
    proxy_cache_path /usr/local/nginx/cache/ levels=1:2 keys_zone=cache_one:200m inactive=5d max_size=1g;
    proxy_ignore_headers X-Accel-Expires Expires Cache-Control Set-Cookie;

  # 虚拟主机配置
    server {
        listen 80 default_server;
        listen 443 ssl default_server;
        server_name www.xw18.cn;
        ssl_certificate  /usr/local/nginx/ssl/www.xw18.cn.crt;
        ssl_certificate_key  /usr/local/nginx/ssl/www.xw18.cn.key;
        ssl_session_timeout  10m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
        ssl_prefer_server_ciphers on;

        charset utf-8;
        access_log  /usr/local/nginx/logs/xws.access.log  main;

        if ($request_method !~ ^(GET|HEAD|POST)$) {
            return 404;
        }

	location / {
            index index; #默认主页为 /index
        }

        # 为内网IP开放nginx状态监控
        location = /xw_NginxStatus/ {
            check_status;
            stub_status on;
            access_log off;
            allow 192.168.3.0/24;
            deny all;
        }

        location = /xw_TomcatStatus/ {
            check_status;
            access_log off;
            allow 192.168.3.0/24;
            deny all;
        }

        location ~ ^/(WEB-INF)/ {
            deny all;
        }
        #error_page 404              /404.html;
        error_page 500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

	#所有的“.html”结尾的请求拦截，读取nginx所在的主机目录
	location  ~ .*\.(html){
	    proxy_cache cache_one;
            proxy_cache_revalidate on;
            proxy_cache_min_uses 3;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_lock on;

            root /usr/local/nginx/html;
        }
	#主要是常用的图片、文件请求拦截
        location ~ .*\.(png|css|js|jpg|jpeg|apk|gif|bmp|swf|ico||eot|svg|ttf|woff) {
            proxy_cache cache_one;
            proxy_cache_revalidate on;
            proxy_cache_min_uses 3;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_lock on;
            proxy_cache_valid 200 304 302 5d;
            proxy_cache_valid any 5d;
            proxy_cache_key '$host:$server_port$request_uri';
            add_header X-Cache '$upstream_cache_status from $host';
            #所有静态文件直接读取硬盘
            root /usr/local/nginx/static;
            expires      7d;
        }

	#其他的请求反向代理到tomcat容器
        location ~ .*$ {
            index index;
            proxy_pass http://xws;
            proxy_redirect off;
            # 后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
            proxy_set_header  Host  $host;
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;

            limit_conn addr 2;
            limit_req zone=one burst=5 nodelay;
        }
    }

}